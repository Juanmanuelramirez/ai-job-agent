# Nombre del flujo de trabajo que aparecerá en la pestaña "Actions" de GitHub
name: Build and Push Docker Image to ECR

# Define cuándo se ejecutará este flujo de trabajo
on:
  # Se ejecuta cada vez que haces un push a la rama 'main'
  push:
    branches: [ "main" ]

# Define las variables de entorno para todo el flujo de trabajo
env:
  AWS_REGION: us-east-1  # <-- CAMBIA ESTO a tu región de AWS preferida (ej. us-west-2)
  ECR_REPOSITORY: ai-job-agent # <-- CAMBIA ESTO al nombre que le des a tu repositorio ECR

# Define los trabajos que se ejecutarán
jobs:
  build-and-push:
    name: Build and Push to ECR
    runs-on: ubuntu-latest # Usa una máquina virtual de Ubuntu para ejecutar los pasos

    steps:
    - name: Checkout repository
      # Clona tu repositorio en la máquina virtual
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      # Configura las credenciales de AWS usando los secretos que crearás en GitHub
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      # Inicia sesión en el registro de contenedores de AWS
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      # Este es el paso principal: construye la imagen Docker y la sube a ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }} # Usa el hash del commit como etiqueta de la imagen para que sea única
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
